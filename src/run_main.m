set_input;%% solution of the ode system via RK45 method[t, y] = ode45(@HodgkinHuxley, t_span, y0);%% visualization of activation potentialfig1 = figure('renderer', 'painters', 'position', [100, 200, 800, 800]);subplot(3,1,1)iinj = I(10, t, t_stop);plot(t, iinj, 'b-');xlabel('t [ms]'), ylabel('I [uA/cm^2]');title('applied current, I(t)');ylim([min(iinj) - 0.1*max(iinj), 1.1*max(iinj)]);grid on;subplot(3,1,2)plot(t, y(:,1), 'b-');xlabel('t [ms]'), ylabel('V [mV]');title('action potential in time, V(t)');ylim([min(y(:,1)) - 0.1*max(y(:,1)), 1.1*max(y(:,1))]);grid on;subplot(3,1,3)plot(t, y(:,2), 'r-', t, y(:,3), 'g--', t, y(:,4), 'b-.');xlabel('t [ms]'), ylabel('n');title('activation parameters dynamics');ylim([min(y(:,2)) - 0.1*max(y(:,2)), 1.1*max(y(:,2))]);legend('m(t)', 'h(t)', 'n(t)');grid on;if save_figures    savefig(fig1, fullfile(figdir, ['V', '_t-', num2str(t_span(2)), ...        '_Itstop-', num2str(t_stop), '_T-', num2str(T), ...        '_k-', num2str(k), '.fig']));end%% visualization of activation parametersfig2 = figure('renderer', 'painters', 'position', [100, 200, 950, 400]);subplot(1,3,1)plot(y(:,1), y(:,2), 'b-');xlabel('V [mV]'), ylabel('m');title('m(V)');grid on;subplot(1,3,2)plot(y(:,1), y(:,3), 'b-');xlabel('V [mV]'), ylabel('h');title('h(V)');grid on;subplot(1,3,3)plot(y(:,1), y(:,4), 'b-');xlabel('V [mV]'), ylabel('n');title('n(V)');grid on;if save_figures    savefig(fig2, fullfile(figdir, ['mhn_V', '_t-', num2str(t_span(2)), ...        '_Itstop-', num2str(t_stop), '_T-', num2str(T), ...        '_k-', num2str(k), '.fig']));end%% multiple experiments with different temps and induction coefsfig3 = figure('renderer', 'painters', 'position', [100, 200, 1000, 1000]);Ts = [0.3, 6.3, 22.3, 28.3];ks = [0, 0.01, 0.3];nrows = length(ks);ncols = length(Ts);nplot = 1;for i = 1:nrows    k = ks(i);    for j = 1:ncols        T = Ts(j);        [t, y] = ode45(@HodgkinHuxley, t_span, y0);        subplot(nrows, ncols, nplot)        plot(t, y(:, 1), 'b-');        xlabel('t [ms]'), ylabel('V [mV]');        title(['V(t), T=', num2str(T), 'Â°C,  k=', num2str(k)]);        nplot = nplot + 1;    endendif save_figures    savefig(fig3, fullfile(figdir, ['V', '_t-', num2str(t_span(2)), ...        '_Itstop-', num2str(t_stop), '_T-multiple_k-multiple.fig']));end